% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_mod.R
\name{fit_mod}
\alias{fit_mod}
\title{Fit structural equation model with requested specifications}
\usage{
fit_mod(biol_data, ID, DD = "none", weight = FALSE,
  correlation = FALSE, ...)
}
\arguments{
\item{biol_data}{Data frame with climate, trait and demographic rate
data for a given population and species.}

\item{ID}{Numeric giving a unique ID of the current dataset for
a given population and species.}

\item{DD}{Character specifying how to account for density dependence by
including population size as additional explanatory in the model. Possibilities
are: 'none' - no inclusion of density dependence, 'n_effectGR' - effect
of population size on growth rate, 'n_effectD' - effect of population size
on demographic rate, 'n_effectDGR' - effect of population size on demographic
rate and growth rate.}

\item{correlation}{Logical (TRUE/FALSE) specifying whether to include
temporal autocorrelation with AR(1) structure.}

\item{weights}{Logical (TRUE/FALSE) specifying whether to use inverse of
variances for traits and demographic rates as weights in the respective
models.}
}
\value{
A fitted object of class psem (see
\code{\link[piecewiseSEM]{psem}} for more details
}
\description{
\code{fit_mod} fits structural equation model with
requested model structure for the specified study ID
}
\examples{
biol_dat <- read.csv('./data-raw/Closed_Data_26_02.csv')
biol_stand <- convert_JulianDay(biol_data = biol_dat)
# example for ID = 1
subs <- droplevels(biol_stand[biol_stand$ID == 1, ])
test_fSEM <- readRDS(paste0('./output_climwin/', subs$ID[1], '_',
                    subs$Species[1], '_', subs$Location[1],
                    '_', subs$Trait[1], '_ForSEM',  '.RDS'))
dat <- test_fSEM$data_res[[1]]
## impute the DR
dat <- impute_ma(data = dat, column = 'Demog_rate_mean')
dat <- impute_median(data = dat, column = 'Demog_rate_SE')
## impute the Pop Size
dat <- impute_ma(data = dat, column = 'Pop_mean')
if(unique(subs$Count) == 'N'){
dat <- impute_median(data = dat, column = 'Pop_SE')
}
## calculate GR
data_GR <- dat \%>\%
dplyr::mutate(., Pop_mean_lag = lag(Pop_mean)) \%>\%
dplyr::mutate(., GR = Pop_mean / Pop_mean_lag) \%>\%
dplyr::filter(., !is.na(GR))

# fit the model
test <- fit_mod(biol_data = data_GR, ID =1,
                DD = FALSE, weight = FALSE,
                correlation = FALSE)  ## does not work for corr = TRUE yet
}
